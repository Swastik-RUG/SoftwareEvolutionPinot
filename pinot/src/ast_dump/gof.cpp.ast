TranslationUnitDecl 0xd8f458 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0xd8fd30 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0xd8f9f0 '__int128'
|-TypedefDecl 0xd8fda0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0xd8fa10 'unsigned __int128'
|-TypedefDecl 0xd90118 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0xd8fe90 '__NSConstantString_tag'
|   `-CXXRecord 0xd8fdf8 '__NSConstantString_tag'
|-TypedefDecl 0xd901b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0xd90170 'char *'
|   `-BuiltinType 0xd8f4f0 'char'
|-TypedefDecl 0xdd0828 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag [1]'
| `-ConstantArrayType 0xdd07d0 '__va_list_tag [1]' 1 
|   `-RecordType 0xd902a0 '__va_list_tag'
|     `-CXXRecord 0xd90208 '__va_list_tag'
|-FunctionDecl 0xdd0ae8 </mnt/d/Academics/pinot/src/gof.cpp:5:1, line:20:1> line:5:6 invalid isCached 'bool (wchar_t *, int *)'
| |-ParmVarDecl 0xdd08f0 <col:15, col:24> col:24 used name 'wchar_t *'
| |-ParmVarDecl 0xdd0a10 <col:30, col:48> col:48 invalid cache 'int *'
| |-CompoundStmt 0xdd0fa8 <line:6:1, line:20:1>
| | |-DeclStmt 0xdd0c20 <line:7:2, col:19>
| | | `-VarDecl 0xdd0ba8 <col:2, col:14> col:7 used flag 'bool' cinit
| | |   `-CXXBoolLiteralExpr 0xdd0c10 <col:14> 'bool' false
| | |-IfStmt 0xdd0f48 <line:8:2, line:18:2>
| | | |-OpaqueValueExpr 0xdd0f30 <<invalid sloc>> 'bool'
| | | `-CompoundStmt 0xdd0f18 <line:9:2, line:18:2>
| | |   `-DeclStmt 0xdd0cf0 <line:10:3, col:17>
| | |     `-VarDecl 0xdd0c50 <col:3, col:16> col:12 used i 'unsigned int' cinit
| | |       `-ImplicitCastExpr 0xdd0cd8 <col:16> 'unsigned int' <IntegralCast>
| | |         `-IntegerLiteral 0xdd0cb8 <col:16> 'int' 0
| | `-ReturnStmt 0xdd0f98 <line:19:2, col:9>
| |   `-ImplicitCastExpr 0xdd0f80 <col:9> 'bool' <LValueToRValue>
| |     `-DeclRefExpr 0xdd0f60 <col:9> 'bool' lvalue Var 0xdd0ba8 'flag' 'bool'
| `-FullComment 0xe0f260 <line:2:3, col:21>
|   `-ParagraphComment 0xe0d4f0 <col:3, col:21>
|     `-TextComment 0xe0d4c0 <col:3, col:21> Text="	Utility functions	"
|-FunctionDecl 0xdd1188 <line:22:1, line:43:1> line:22:6 invalid intersection 'bool (int *, int *)'
| |-ParmVarDecl 0xdd1038 <col:19, col:37> col:37 invalid list1 'int *'
| |-ParmVarDecl 0xdd10b8 <col:44, col:62> col:62 invalid list2 'int *'
| `-CompoundStmt 0xdfe980 <line:23:1, line:43:1>
|   |-DeclStmt 0xdd12c0 <line:24:2, col:19>
|   | `-VarDecl 0xdd1248 <col:2, col:14> col:7 used flag 'bool' cinit
|   |   `-CXXBoolLiteralExpr 0xdd12b0 <col:14> 'bool' false
|   |-IfStmt 0xdfe920 <line:25:2, line:41:2>
|   | |-OpaqueValueExpr 0xdfe908 <<invalid sloc>> 'bool'
|   | `-CompoundStmt 0xdfe8f0 <line:26:2, line:41:2>
|   |   `-DeclStmt 0xdd1428 <line:27:3, col:20>
|   |     |-VarDecl 0xdd12f0 <col:3, col:16> col:12 used i 'unsigned int' cinit
|   |     | `-ImplicitCastExpr 0xdd1378 <col:16> 'unsigned int' <IntegralCast>
|   |     |   `-IntegerLiteral 0xdd1358 <col:16> 'int' 0
|   |     `-VarDecl 0xdd13a8 <col:3, col:19> col:19 used j 'unsigned int'
|   `-ReturnStmt 0xdfe970 <line:42:2, col:9>
|     `-ImplicitCastExpr 0xdfe958 <col:9> 'bool' <LValueToRValue>
|       `-DeclRefExpr 0xdfe938 <col:9> 'bool' lvalue Var 0xdd1248 'flag' 'bool'
|-FunctionDecl 0xdfeaa8 <line:45:1, line:58:1> line:45:6 invalid printVector 'void (int *)'
| |-ParmVarDecl 0xdfe9e8 <col:18, col:36> col:36 invalid v 'int *'
| `-CompoundStmt 0xdfee98 <line:46:1, line:58:1>
|   `-IfStmt 0xdfee58 <line:47:2, line:57:2>
|     |-OpaqueValueExpr 0xdfee40 <<invalid sloc>> 'bool'
|     `-CompoundStmt 0xdfee28 <line:48:2, line:57:2>
|       `-DeclStmt 0xdfebd0 <line:49:3, col:13>
|         `-VarDecl 0xdfeb68 <col:3, col:12> col:12 used i 'unsigned int'
|-FunctionDecl 0xdff0d8 <line:64:1, line:114:1> line:64:6 invalid FindPrototype 'void (int *, int *, int *)'
| |-ParmVarDecl 0xdfeed8 <col:20, col:37> col:37 invalid mb_table 'int *'
| |-ParmVarDecl 0xdfef68 <col:47, col:57> col:57 invalid gen_table 'int *'
| |-ParmVarDecl 0xdfeff8 <col:68, col:80> col:80 invalid assoc_table 'int *'
| |-CompoundStmt 0xe01260 <line:65:1, line:114:1>
| | |-DeclStmt 0xdff248 <line:66:2, col:37>
| | | `-VarDecl 0xdff1d0 <col:2, col:20> col:20 invalid prototypes 'int *'
| | `-IfStmt 0xe01248 <line:70:2, line:113:2>
| |   |-OpaqueValueExpr 0xe01230 <<invalid sloc>> 'bool'
| |   `-CompoundStmt 0xe01218 <line:71:2, line:113:2>
| |     `-DeclStmt 0xdff398 <line:72:3, col:13>
| |       `-VarDecl 0xdff330 <col:3, col:12> col:12 used i 'unsigned int'
| `-FullComment 0xe0f330 <line:61:3, col:15>
|   `-ParagraphComment 0xe0f300 <col:3, col:15>
|     `-TextComment 0xe0f2d0 <col:3, col:15> Text="	GoF patterns"
|-FunctionDecl 0xe01468 <line:116:1, line:213:1> line:116:6 invalid FindSingleton 'void (int *, int *, int *)'
| |-ParmVarDecl 0xe012a8 <col:20, col:37> col:37 invalid mb_table 'int *'
| |-ParmVarDecl 0xe01338 <col:47, col:57> col:57 invalid gen_table 'int *'
| |-ParmVarDecl 0xe013c8 <col:68, col:80> col:80 invalid assoc_table 'int *'
| `-CompoundStmt 0xe051b0 <line:117:1, line:213:1>
|   |-DeclStmt 0xe02020 <line:118:2, col:36>
|   | `-VarDecl 0xe01fb8 <col:2, col:26> col:26 invalid candidates 'int'
|   |-DeclStmt 0xe020b8 <line:120:2, col:12>
|   | `-VarDecl 0xe02050 <col:2, col:11> col:11 used i 'unsigned int'
|   `-IfStmt 0xe05198 <line:142:2, line:212:2>
|     |-OpaqueValueExpr 0xe05180 <<invalid sloc>> 'bool'
|     `-CompoundStmt 0xe05168 <line:143:2, line:212:2>
|       `-DeclStmt 0xe02898 <line:144:3, col:38>
|         `-VarDecl 0xe02830 <col:3, col:37> col:37 invalid p 'int'
|-FunctionDecl 0xe05450 <line:215:1, line:285:1> line:215:6 invalid FindChainOfResponsibility 'void (int *, int *, int *)'
| |-ParmVarDecl 0xe05200 <col:32, col:49> col:49 invalid mb_table 'int *'
| |-ParmVarDecl 0xe05290 <col:59, col:69> col:69 invalid gen_table 'int *'
| |-ParmVarDecl 0xe05320 <col:80, col:92> col:92 invalid assoc_table 'int *'
| `-CompoundStmt 0xe06f68 <line:216:1, line:285:1>
|   |-DeclStmt 0xe055b0 <line:217:2, col:32>
|   | `-VarDecl 0xe05548 <col:2, col:20> col:20 invalid cache 'int *'
|   `-DeclStmt 0xe05648 <line:218:2, col:12>
|     `-VarDecl 0xe055e0 <col:2, col:11> col:11 used i 'unsigned int'
|-FunctionDecl 0xe07170 <line:287:1, line:398:1> line:287:6 invalid FindFlyweight 'void (int *, int *, int *)'
| |-ParmVarDecl 0xe06fb0 <col:20, col:37> col:37 invalid mb_table 'int *'
| |-ParmVarDecl 0xe07040 <col:47, col:57> col:57 invalid gen_table 'int *'
| |-ParmVarDecl 0xe070d0 <col:68, col:80> col:80 invalid assoc_table 'int *'
| `-CompoundStmt 0xe0ca88 <line:288:1, line:398:1>
|   |-DeclStmt 0xe072d0 <line:290:2, col:32>
|   | `-VarDecl 0xe07268 <col:2, col:20> col:20 invalid pools 'int *'
|   `-DeclStmt 0xe07368 <line:291:2, col:12>
|     `-VarDecl 0xe07300 <col:2, col:11> col:11 used i 'unsigned int'
`-FunctionDecl 0xe0cc90 <line:400:1, line:452:1> line:400:6 invalid FindStrategy 'void (int *, int *, int *)'
  |-ParmVarDecl 0xe0cad0 <col:19, col:36> col:36 invalid mb_table 'int *'
  |-ParmVarDecl 0xe0cb60 <col:46, col:56> col:56 invalid gen_table 'int *'
  |-ParmVarDecl 0xe0cbf0 <col:67, col:79> col:79 invalid assoc_table 'int *'
  `-CompoundStmt 0xe0d438 <line:401:1, line:452:1>
    |-DeclStmt 0xe0cdc8 <line:402:2, col:12>
    | `-VarDecl 0xe0cd60 <col:2, col:11> col:11 used i 'unsigned int'
    |-DeclStmt 0xe0ce88 <line:403:2, col:29>
    | `-VarDecl 0xe0ce20 <col:2, col:19> col:19 invalid candidates 'int'
    |-DeclStmt 0xe0cf48 <line:404:2, col:29>
    | `-VarDecl 0xe0cee0 <col:2, col:19> col:19 invalid strategies 'int'
    |-DeclStmt 0xe0d238 <line:417:2, line:418:71>
    | `-VarDecl 0xe0d0c8 <line:417:2, col:24> col:24 invalid method_declaration 'int *'
    |-DeclStmt 0xe0d2e0 <line:419:2, col:68>
    | `-VarDecl 0xe0d278 <col:2, col:17> col:17 invalid method_body 'int *'
    `-IfStmt 0xe0d420 <line:424:2, line:451:2>
      |-OpaqueValueExpr 0xe0d408 <<invalid sloc>> 'bool'
      `-CompoundStmt 0xe0d3f8 <line:425:2, line:451:2>
